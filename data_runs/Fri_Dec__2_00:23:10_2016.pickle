(dp0
S'code_type'
p1
S'Surface Code'
p2
sS'trials'
p3
I10
sS'L'
p4
(lp5
I3
aI3
aI3
aI3
aI3
aI5
aI5
aI5
aI5
aI5
asS'p_succ'
p6
(lp7
F1.0
aF1.0
aF0.9
aF0.7
aF0.4
aF1.0
aF1.0
aF1.0
aF0.5
aF0.30000000000000004
asS'model_type'
p8
S'Code Capacity'
p9
sS'p_phys'
p10
(lp11
cnumpy.core.multiarray
scalar
p12
(cnumpy
dtype
p13
(S'f8'
p14
I0
I1
tp15
Rp16
(I3
S'<'
p17
NNNI-1
I-1
I0
tp18
bS'\xc4\xc2+\xd1\xb3:\x90?'
p19
tp20
Rp21
ag12
(g16
S'r:\xa0N\xdc0\xa0?'
p22
tp23
Rp24
ag12
(g16
S"\xfa\xa9\xf8\xc3\n'\xb0?"
p25
tp26
Rp27
ag12
(g16
S'\xd1\x84\x96-?\x1d\xc0?'
p28
tp29
Rp30
ag12
(g16
S'Lp\xdd\x87y\x13\xd0?'
p31
tp32
Rp33
ag12
(g16
S'\xc4\xc2+\xd1\xb3:\x90?'
p34
tp35
Rp36
ag12
(g16
S'r:\xa0N\xdc0\xa0?'
p37
tp38
Rp39
ag12
(g16
S"\xfa\xa9\xf8\xc3\n'\xb0?"
p40
tp41
Rp42
ag12
(g16
S'\xd1\x84\x96-?\x1d\xc0?'
p43
tp44
Rp45
ag12
(g16
S'Lp\xdd\x87y\x13\xd0?'
p46
tp47
Rp48
asS'decoder_type'
p49
S'RG'
p50
sS'dimension'
p51
I2
s.