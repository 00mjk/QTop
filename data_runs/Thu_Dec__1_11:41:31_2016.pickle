(dp0
S'code_type'
p1
S'Surface Code'
p2
sS'trials'
p3
I100
sS'L'
p4
(lp5
I3
aI3
aI3
aI3
aI3
aI3
aI3
aI3
aI3
aI5
aI5
aI5
aI5
aI5
aI5
aI5
aI5
aI5
asS'p_succ'
p6
(lp7
F0.85
aF0.72
aF0.69
aF0.7
aF0.72
aF0.6
aF0.5900000000000001
aF0.61
aF0.54
aF0.8200000000000001
aF0.72
aF0.71
aF0.71
aF0.56
aF0.63
aF0.61
aF0.61
aF0.51
asS'model_type'
p8
S'Code Capacity'
p9
sS'p_phys'
p10
(lp11
cnumpy.core.multiarray
scalar
p12
(cnumpy
dtype
p13
(S'f8'
p14
I0
I1
tp15
Rp16
(I3
S'<'
p17
NNNI-1
I-1
I0
tp18
bS'\xb8\x1e\x85\xebQ\xb8\xbe?'
p19
tp20
Rp21
ag12
(g16
S'\xa4p=\n\xd7\xa3\xc0?'
p22
tp23
Rp24
ag12
(g16
S'\xecQ\xb8\x1e\x85\xeb\xc1?'
p25
tp26
Rp27
ag12
(g16
S'333333\xc3?'
p28
tp29
Rp30
ag12
(g16
S'{\x14\xaeG\xe1z\xc4?'
p31
tp32
Rp33
ag12
(g16
S'\xc3\xf5(\\\x8f\xc2\xc5?'
p34
tp35
Rp36
ag12
(g16
S'\n\xd7\xa3p=\n\xc7?'
p37
tp38
Rp39
ag12
(g16
S'R\xb8\x1e\x85\xebQ\xc8?'
p40
tp41
Rp42
ag12
(g16
S'\x9a\x99\x99\x99\x99\x99\xc9?'
p43
tp44
Rp45
ag12
(g16
S'\xb8\x1e\x85\xebQ\xb8\xbe?'
p46
tp47
Rp48
ag12
(g16
S'\xa4p=\n\xd7\xa3\xc0?'
p49
tp50
Rp51
ag12
(g16
S'\xecQ\xb8\x1e\x85\xeb\xc1?'
p52
tp53
Rp54
ag12
(g16
S'333333\xc3?'
p55
tp56
Rp57
ag12
(g16
S'{\x14\xaeG\xe1z\xc4?'
p58
tp59
Rp60
ag12
(g16
S'\xc3\xf5(\\\x8f\xc2\xc5?'
p61
tp62
Rp63
ag12
(g16
S'\n\xd7\xa3p=\n\xc7?'
p64
tp65
Rp66
ag12
(g16
S'R\xb8\x1e\x85\xebQ\xc8?'
p67
tp68
Rp69
ag12
(g16
S'\x9a\x99\x99\x99\x99\x99\xc9?'
p70
tp71
Rp72
asS'decoder_type'
p73
S'MWPM'
p74
sS'dimension'
p75
I2
s.